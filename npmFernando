npm install angular-freezeframe


traduza para português-brasileiro mantendo o contexto de academia, nao traduza as seguintes partes : 


 {
        "bodypart":"",
        "equipment":"",
        "gifUrl":"",
        "id":"",
        "name":"",
        "target":"",
        "secondaryMuscles":[
            "",
            ""
        ],
        "instructions":[
            "",
            "",
            "",
            "",
            ""
        ]
    },

agora traduza o que está em baixo e coloque no formato json 



documento seria a data de hoje historico 


historico id ser datatime 

Arroz, integral, cozido
Calorias: 123.53 kcal
Proteína: 2.59 g
Gordura: 1.00 g
Carboidratos: 25.81 g
historicoID: ""
diaDeHj: ""



import { Component, OnInit } from '@angular/core';
import { AngularFireAuth } from '@angular/fire/compat/auth';
import { AngularFirestore } from '@angular/fire/compat/firestore';
import { Timestamp } from 'rxjs';

interface Alimento {
  carbohydrate_g: string;
  description: string;
  energy_kcal: string;
  gramas: string;
  lipid_g: string;
  protein_g: string;
  calorias: number;
  meal_type: string;
  dataHora: string;
  user_id: string;
}

@Component({
  selector: 'app-historico-alimentacao',
  templateUrl: './historico-alimentacao.page.html',
  styleUrls: ['./historico-alimentacao.page.scss'],
})
export class HistoricoAlimentacaoPage implements OnInit {
  cafeManha: Alimento[] = [];
  almoco: Alimento[] = [];
  jantar: Alimento[] = [];
  lanchesOutros: Alimento[] = []
  constructor() { }

  ngOnInit() {
    this.afAuth.authState.subscribe((user) => {
      if (user) {
        this.firestore
          .collection('corridas', ref => ref.where('user_id', '==', user.uid).orderBy('data', 'desc').orderBy('hora', 'desc')) // Ordena por data e hora descendente)
          .get()
          .subscribe(
            (snapshot) => {
              this.corridas = [];
              snapshot.forEach(doc => {
                const data: any = doc.data();
                const corrida = {
                  corrida_id: doc.id,
                  dia: data.data,
                  hora: data.hora,
                  distancia: data.distancia,
                  duracao: data.duracao,
                  paceMedio: data.ritmoMedio,
                  calorias: data.calorias,
                };
                this.corridas.push(corrida);
              });
            },
            (error) => {
              console.error('Erro ao buscar corridas do usuário:', error);
            }
          );
      }
    });
  }

}

